@model WebSite.Models.Warehouse.WH_V3_YEU_CAU_NHAP_KHODTO
@using WebSite.Language
@{
    ViewBag.Title = Booking.WH_ycNKChiTiet;
    Layout = "~/Views/Shared/_Layout_Warehouse.cshtml";
}
<style>
    .text-danger {
        color: red;
    }
</style>
<div class="row formYCNhapKho" style="padding-top:10px; border:solid 1px; border-radius: 10px">

    <div class="col-md-3 form-group">
        @Html.LabelFor(model => model.MA_YEU_CAU_NHAP_KHO, @Booking.WH_maYCNK, htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.MA_YEU_CAU_NHAP_KHO, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control textinput", @autocomplete = "off", @title = "Mời nhập mã yêu cầu nhập kho" } })
            @Html.ValidationMessageFor(model => model.MA_YEU_CAU_NHAP_KHO, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-2 form-group hidden">
        @Html.LabelFor(model => model.NGAY_DINH_NHAP_KHO, "Ngày định NK: ", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.DevExpress().DateEditFor(u => u.NGAY_DINH_NHAP_KHO, settings =>
       {
           settings.Name = "detNgayDinhNK";
           settings.Properties.EditFormat = EditFormat.Custom;
           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
           settings.ControlStyle.CssClass = "form-control col-md-12";
           settings.Width = System.Web.UI.WebControls.Unit.Percentage(75);
           var cookie = Request.Cookies["NgayDinhNK"];
           if (cookie != null)
           {
               settings.Date = DateTime.ParseExact(cookie.Value, "yyyy-MM-dd", null);
           }
           else
           {
               settings.Date = DateTime.Now;
           }
           settings.Properties.EditFormat = EditFormat.Custom;
           settings.Properties.EditFormatString = "dd/MM/yyyy";
           settings.Properties.PickerDisplayMode = DatePickerDisplayMode.Calendar;
       }).GetHtml()
        </div>
    </div>
    <div class="col-md-2 form-group hidden">
        @Html.LabelFor(model => model.GIO_DINH_NHAP_KHO, "Giờ định NK: ", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.DevExpress().DateEditFor(u => u.GIO_DINH_NHAP_KHO, settings =>
       {
           settings.Name = "detGioDinhNK";
           settings.Properties.EditFormat = EditFormat.Custom;
           settings.Properties.UseMaskBehavior = true;
           settings.Properties.EditFormatString = "hh:mm:ss tt";
           settings.ControlStyle.CssClass = "form-control col-md-12";
           settings.Properties.TimeSectionProperties.Visible = true;
           settings.Properties.TimeSectionProperties.Adaptive = true;
           settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
           settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
           settings.Date = DateTime.Now;
           settings.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
       }).GetHtml()
        </div>
    </div>
    <div class="col-md-2 form-group hidden">
        @Html.LabelFor(model => model.NGAY_LAP, "Ngày đặt hàng: ", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.DevExpress().DateEditFor(u => u.NGAY_LAP, settings =>
       {
           settings.Name = "detNgayDatHang";
           settings.Properties.EditFormat = EditFormat.Custom;
           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
           settings.ControlStyle.CssClass = "form-control col-md-12";
           settings.Width = System.Web.UI.WebControls.Unit.Percentage(75);
           var cookie = Request.Cookies["NgayDatHang"];
           if (cookie != null)
           {
               settings.Date = DateTime.ParseExact(cookie.Value, "yyyy-MM-dd", null);
           }
           else
           {
               settings.Date = DateTime.Now;
           }
           settings.Properties.EditFormat = EditFormat.Custom;
           settings.Properties.EditFormatString = "dd/MM/yyyy";
           settings.Properties.PickerDisplayMode = DatePickerDisplayMode.Calendar;
       }).GetHtml()
        </div>
    </div>
    <div class="col-md-2 form-group hidden">
        @Html.LabelFor(model => model.MA_PO_NHA_CUNG_CAP, "Mã PO: ", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.MA_PO_NHA_CUNG_CAP, new { htmlAttributes = new { @class = "form-control textinput", @autocomplete = "off", @title = "Mời nhập mã PO" } })
            @Html.ValidationMessageFor(model => model.MA_YEU_CAU_NHAP_KHO, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-8 form-group">
        @Html.LabelFor(model => model.GHI_CHU, Booking.ghichu, htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.GHI_CHU, new { htmlAttributes = new { @class = "form-control textinput", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.GHI_CHU, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-1" style="margin-top:17px">
        <input type="submit" value="@Booking.WH_luu" class="btn btn-primary col-md-10 pull-right" id="Save" onclick="luuNhapKho()" />
    </div>

</div>

<div class="col-md-3 form-group" style="margin-top:8px">
    <div class="col-md-12">
        <label>@Booking.WH_tenSP</label>
        @*<input type="text" class="form-control" id="txtTenSP" readonly />*@
        @Html.DevExpress().ComboBox(settings =>
       {
           settings.Name = "cbSanPham";
           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
           settings.Properties.TextField = "TEN_SAN_PHAM";
           settings.Properties.ValueField = "MA_SAN_PHAM";
           settings.Properties.NullText = @Booking.WH_moiChonSP;
           settings.ControlStyle.CssClass = "form-control col-md-6";
           settings.Properties.ClientSideEvents.ItemFiltering = "onItemFiltering";
           settings.Properties.ClientSideEvents.CustomHighlighting = "onCustomHighlighting";
           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
           settings.Properties.TextFormatString = "{1}";
           settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){changeComboBox(s,e)}";
           settings.Properties.Columns.Add(column =>
           {
               column.FieldName = "MA_SP_NHA_SAN_XUAT";
               column.Caption = @Booking.WH_maSP;
               column.Width = 100;

           });
           settings.Properties.Columns.Add(column =>
           {
               column.FieldName = "TEN_SAN_PHAM";
               column.Caption = @Booking.WH_tenSP;
               column.Width = 350;
           });
       }).BindList(ViewData["SanPham"] as List<WebSite.Models.Warehouse.WH_V3_PRODUCT_TYPEDTO>).GetHtml()
    </div>
</div>
<div class="col-md-9" style="margin-top:5px">
    <div class="col-md-3">
        <label><input type="checkbox" id="checkMaVach" onchange="changeCheckbox()">@Booking.WH_nhapTheoMaSP</label>
        <input type="text" class="form-control" id="txtMaSPNSX" readonly>
    </div>
    <div class="col-md-1" style="margin-top:20px;padding-left:0;padding-right:0">
        <input type="button" value="@Booking.chon" class="col-md-12 btn btn-primary" id="select" disabled />
    </div>
    <div class="col-md-2 col-2-config col-magin-config">
        <label>@Booking.WH_soLuong</label>
        <div class="col-md-12">
            <input type="number" class="form-control" id="txtSoLuong" value="0" data-decimals="0" step="1" min="0" onchange="thayDoiSL()" />
        </div>
    </div>
    <div class="col-md-1 col-1-config col-magin-config">
        <label>@Booking.WH_donViTinh</label>
        <div class="col-md-12">
            <input type="text" class="form-control" id="txtDonViTinh" readonly />
        </div>
    </div>
    <div class="col-md-2 col-magin-config">
        <label>@Booking.WH_ngaySanXuat</label>
        <div class='input-group date col-md-12' id='datetimepicker3'>
            <input type='text' class="form-control" name="detNgaySX" id="detNgaySX" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
            <span class="input-group-addon">
                <fa class="fa fa-calendar"></fa>
            </span>
        </div>
        <script type="text/javascript">
            $(function () {
                $("#detNgaySX").datetimepicker({ format: 'DD/MM/YYYY' });
            });
        </script>
    </div>
    <div class="col-md-2 col-magin-config">
        <label>@Booking.WH_ngayHetHan</label>
        <div class='input-group date col-md-12' id='datetimepicker3'>
            <input type='text' class="form-control" name="detNgayHetHan" id="detNgayHetHan" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
            <span class="input-group-addon">
                <fa class="fa fa-calendar"></fa>
            </span>
        </div>
        <script type="text/javascript">
            $(function () {
                $("#detNgayHetHan").datetimepicker({ format: 'DD/MM/YYYY' });
            });
        </script>
    </div>
    <div class="col-md-1" style="margin-top:18px">
        <input type="button" class="col-md-12 form-control btn-success pull-right" id="btnThem" value="@Booking.WH_them" onclick="themSPLenLuoi()" />
    </div>
</div>

<div class="col-md-2 hidden">
    <label>Đơn vị QĐ</label>
    <div class="col-md-12">
        <input type="text" class="form-control" id="txtDonViQD" readonly />
    </div>
</div>
<div class="col-md-12">
    <div class="col-md-1 hidden">
        <label>Tỷ lệ quy đổi</label>
        <div class="col-md-12">
            <input type="number" class="form-control" id="txtTyLeQD" value="0" data-decimals="0" step="1" min="0" readonly />
        </div>
    </div>
    <div class="col-md-1 hidden">
        <label>Số lượng quy đổi</label>
        <div class="col-md-12">
            <input type="number" class="form-control" id="txtSoLuongQD" value="0" data-decimals="2" step="0.01" min="0" readonly />
        </div>
    </div>
    <div class="col-md-9 hidden">
        <label>Ghi chú</label>
        <div class="col-md-12">
            <input type="text" class="form-control" id="txtGhiChu" />
        </div>
    </div>
</div>
<div class="row" style="margin-top:10px">
    @using (Html.BeginForm())
    {
        @Html.Action("_grvThongTinYCNhapKhoPartial")
    }
</div>
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="mi-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@Booking.WH_banCoMuonXoaChiTiet</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="modal-btn-si">@Booking.WH_co</button>
                <button type="button" class="btn btn-primary" id="modal-btn-no">@Booking.WH_khong</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Handle the form submit event, and make the Ajax request:
        $("#myform").on("submit", function (event) {
            event.preventDefault();
            if (!$("#myform").valid()) {
            }
            else {
                var url = $(this).attr("action");
                var formData = $(this).serialize();
                $.ajax({
                    url: url,
                    type: "POST",
                    data: formData,
                    dataType: "json",
                    success: function (data) {
                        if (data.isError) {
                            Swal.fire(data.Mess,
                                '',
                                'error')
                            return;
                        }
                        else {
                            gridView.Refresh();
                        }
                    }
                });
            }
        });
    });

    //CHECKBOX
    function changeCheckbox() {
        var checkbox = $('#checkMaVach')[0].checked;

        if (!checkbox) {
            document.getElementById("txtMaSPNSX").readOnly = true;
            document.getElementById("txtMaSPNSX").value = '';
            $("#select").prop('disabled', true);
            cbSanPham.SetEnabled(true);
            cbSanPham.SetValue('');
        }
        else {
            document.getElementById("txtMaSPNSX").readOnly = false;
            document.getElementById("txtMaSPNSX").value = '';
            $("#select").prop('disabled', false);
            cbSanPham.SetEnabled(false);
            cbSanPham.SetValue('');
        }
    }

    //chuột phải
    function OnContextMenuItemClick(s, e) {
        var item = e.elementIndex;
        if (e.item.name == "ExportToXLSX") {
            gridView.ExportTo(ASPxClientGridViewExportFormat.Xlsx);
        }
    }

    //Select change
    function changeComboBox(s, e) {
        var maSanPham = cbSanPham.GetValue();
        var data = {
            maSanPham: maSanPham,
            isTheoMaSP: true,
            xuatKho: false
        }
        $.ajax({
            type: "post",
            url: "/Warehouse/GetThongTinSanPham",
            data: data,
            dataType: "json",
            success: function (data) {
                if (data.isError) {
                    Swal.fire(data.Mess,
                        '',
                        'error')
                    rs();
                    return;
                }
                else {
                    document.getElementById("txtDonViTinh").value = data.Object[0].TEN_DON_VI_TINH;
                    document.getElementById("txtMaSPNSX").value = data.Object[0].MA_SP_NHA_SAN_XUAT;
                }
            },
            complete: function () {
                $('.img-loading').hide();
            }

        });
    }

    //Thay đổi số lượng
    function thayDoiSL() {
        var sl = document.getElementById("txtSoLuong").value;
        document.getElementById("txtSoLuongQD").value = sl;
    }
    //Thêm sản phẩm lên lưới
    function themSPLenLuoi() {
        var maSanPham = cbSanPham.GetValue();
        var soLuong = document.getElementById("txtSoLuong").value;
        var soLuongQD = document.getElementById("txtSoLuongQD").value;
        var ngaySX = document.getElementById("detNgaySX").value;
        var ngayHH = document.getElementById("detNgayHetHan").value;
        var ghiChu = document.getElementById("txtGhiChu").value;
        var data = {
            maSanPham: maSanPham,
            soLuong: soLuong,
            soLuongQD: soLuongQD,
            ngaySX: ngaySX,
            ngayHH: ngayHH,
            ghiChu: ghiChu
        }
        $.ajax({
            type: "post",
            url: "/Warehouse/ThemSanPhamLenLuoi",
            data: data,
            dataType: "json",
            success: function (data) {
                if (data.isError) {
                    Swal.fire(data.Mess,
                        '',
                        'error')
                    return;
                }
                else {
                    gridView.Refresh();
                    rs();
                    $("#mi-modal1").modal('hide');
                }
            },
            complete: function () {
                $('.img-loading').hide();
            }

        });
    }
    function rs() {
        cbSanPham.SetValue('');
        document.getElementById("txtSoLuong").value = '0';
        document.getElementById("txtSoLuongQD").value = '0';
        var date = new Date();
        document.getElementById("detNgaySX").value = date.getDate() + '/0' + (date.getMonth() + 1) + '/' + date.getFullYear();
        document.getElementById("detNgayHetHan").value = date.getDate() + '/0' + (date.getMonth() + 1) + '/' + date.getFullYear();
        document.getElementById("txtGhiChu").value = '';
        document.getElementById("txtTyLeQD").value = '0';
        cbSanPham.SetValue('');
        document.getElementById("txtMaSPNSX").value = '';
        document.getElementById("txtDonViTinh").value = '';
    }
    //modal
    var modalConfirm = function (callback) {

        $("#btnXoaChiTiet").on("click", function () {
            $("#mi-modal").modal('show');
        });

        $("#modal-btn-si").on("click", function () {
            callback(true);
            $("#mi-modal").modal('hide');
        });

        $("#modal-btn-no").on("click", function () {
            callback(false);
            $("#mi-modal").modal('hide');
        });
    };

    modalConfirm(function (confirm) {
        if (confirm) {
            xoaChiTiet();
        }
    });

    //Xóa chi tiết
    function xoaChiTiet(id) {
        Swal.fire({
            title: '@Html.Raw(@Booking.WH_banCoMuonXoaChiTiet)',
            text: "",
            type: 'warning',
            showCancelButton: true,
            cancelButtonText: 'No',
            confirmButtonText: 'Yes'
        })
        .then(function (result) {
            if (result.value) {
                $.ajax({
                    type: "post",
                    url: "/Warehouse/XoaChiTiet",
                    data: {
                        id: id,
                        loai: 'NK'
                    },
                    dataType: "json",
                    success: function (data) {
                        if (data.isError) {
                            Swal.fire(data.Mess,
                                '',
                                'error')
                            return;
                        }
                        else {
                            gridView.Refresh();
                        }
                    },
                    complete: function () {
                        $('.img-loading').hide();
                    }

                });
                gridView.Refresh();
            }
        })
    }

    function luuNhapKho() {
        var maYCNK = document.getElementById("MA_YEU_CAU_NHAP_KHO").value;
        var ngayDinhNK = detNgayDinhNK.GetText();
        var gioDinhNK = detGioDinhNK.GetText();
        var ngayDatHang = detNgayDatHang.GetText();
        var maPO = document.getElementById("MA_PO_NHA_CUNG_CAP").value;
        var ghiChu = document.getElementById("GHI_CHU").value;
        var data = {
            maYCNK: maYCNK,
            ngayDinhNK: ngayDinhNK,
            gioDinhNK: gioDinhNK,
            ngayDatHang: ngayDatHang,
            maPO: maPO,
            ghiChu: ghiChu
        }
        $.ajax({
            type: "post",
            url: "/Warehouse/LuuNhapKho",
            data: data,
            dataType: "json",
            success: function (data) {
                if (data.isError) {
                    Swal.fire(data.Mess,
                        '',
                        'error')
                    return;
                }
                else {
                    Swal.fire(
                         '',
                         '@Html.Raw(@Booking.WH_themThanhCong)',
                         'success'
                       )
                      .then((willDelete) => {
                          if (willDelete) {
                              gridView.Refresh();
                              var url1 = '@Url.Action("QuanLyNhapKho", "Warehouse")';
                              window.location.href = url1;
                          }
                      });

                }
            },
            complete: function () {
                $('.img-loading').hide();
            }

        });
    }

    function changeTextBox(s, e) {
        var maSPNSX = document.getElementById("txtMaSPNSX").value;
        var data = null;
        data = {
            maSPNSX: maSPNSX,
            isTheoMaSP: false,
            xuatKho: false
        }
        $.ajax({
            type: "post",
            url: "/Warehouse/GetThongTinSanPham",
            data: data,
            dataType: "json",
            success: function (data) {
                if (data.Error) {
                    Swal.fire(data.Title,
                        '',
                        'error')
                    rs();
                    return;
                }
                else {
                    cbSanPham.SetValue(data.Object[0].MA_SAN_PHAM);
                    document.getElementById("txtDonViTinh").value = data.Object[0].TEN_DON_VI_TINH;
                    document.getElementById("txtMaSPNSX").value = data.Object[0].MA_SP_NHA_SAN_XUAT;
                    document.getElementById("txtDonViQD").value = data.Object[0].TEN_DON_VI_TINH_QUY_DOI;
                    document.getElementById("txtTyLeQD").value = "1";
                }
            },
            complete: function () {
                $('.img-loading').hide();
            }

        });
    }
    //Enter mã hàng
    $("#txtMaHang").keyup(function (event) {
        if (event.keyCode === 13) {
            changeTextBox();
        }
    });
    //Enter mã SPNSX
    $("#txtMaSPNSX").keyup(function (event) {
        if (event.keyCode === 13) {
            changeTextBox();
        }
    });
    $("#select").on("click", function () {
        changeTextBox();
    });




    var focusedItem;
    function onCellBeginChanged(s, e) {
        focusedItem = e.focusedColumn.index;
    }
    function onCellEndChanged(s, e) {
        setTimeout(function () {
            try {
                var res = {};
                res["ID"] = e.key;
                for (i in e.rowValues) {
                    var name = gridView.GetColumn(parseInt(i)).fieldName;
                    res[name] = e.rowValues[i].value == undefined ? "" : e.rowValues[i].value;
                }
                $.ajax({
                    type: "POST",
                    url: "/Warehouse/CapNhatGhiChu",
                    data: { dto: res },
                    success: function (data) {
                        if (!data.Error) {
                        }
                        else {
                            Swal.fire({
                                title: data.Title,
                                text: "",
                                icon: 'error',
                                showCancelButton: false,
                                confirmButtonText: 'Yes'
                            })
                                .then(function (willDelete) {
                                    if (willDelete.value) {
                                        window.location.reload();
                                    }
                                });
                        }
                    }
                });
            }
            catch (er) {
                Swal.fire(er.message,
                    '',
                    'error')
                return;
            }
        }, 1);
    }
</script>


